{"remainingRequest":"/Users/moge/dafei/study_project/Vue/test-cli3/node_modules/thread-loader/dist/cjs.js!/Users/moge/dafei/study_project/Vue/test-cli3/node_modules/babel-loader/lib/index.js!/Users/moge/dafei/study_project/Vue/test-cli3/node_modules/eslint-loader/index.js??ref--13-0!/Users/moge/dafei/study_project/Vue/test-cli3/src/http/index.js","dependencies":[{"path":"/Users/moge/dafei/study_project/Vue/test-cli3/src/http/index.js","mtime":1550115234095},{"path":"/Users/moge/dafei/study_project/Vue/test-cli3/node_modules/cache-loader/dist/cjs.js","mtime":1538991184695},{"path":"/Users/moge/dafei/study_project/Vue/test-cli3/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/moge/dafei/study_project/Vue/test-cli3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/moge/dafei/study_project/Vue/test-cli3/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport qs from 'qs';\nimport router from '@/router';\nimport { Message } from 'element-ui'; // https://api.freshxiaomei.com/v1/trading/community/groupbuy/5c20d59c94303925bc0eedab/tradings\n// const Baseurl = 'https://www.easy-mock.com/mock/5c22db120639a3144b2f0dba/api'\n// const Baseurl = 'http://www.vuetext.com:8084'\n\nvar http = axios.create({\n  // baseURL: Baseurl,\n  timeout: 600,\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' // headers: {'X-Custom-Header': 'foobar'\n\n  }\n}); //http request 拦截器\n\nhttp.interceptors.request.use(function (config) {\n  config.headers = {\n    'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'\n  };\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); //http request 响应拦截器即异常处理\n\nhttp.interceptors.response.use(function (res) {\n  if (res.data.status > 0) {\n    console.log(res.data);\n\n    switch (res.data.status) {\n      case 401:\n        res.data.msg = '未授权，请重新登录';\n        router.push({\n          name: 'login'\n        });\n        break;\n\n      case 403:\n        res.data.msg = '拒绝访问';\n        break;\n\n      case 404:\n        res.data.msg = '请求错误,未找到该资源';\n        break;\n\n      case 405:\n        res.data.msg = '请求方法未允许';\n        break;\n\n      case 408:\n        res.data.msg = '请求超时';\n        break;\n\n      case 500:\n        res.data.msg = '服务器端出错';\n        break;\n\n      case 501:\n        res.data.msg = '网络未实现';\n        break;\n\n      case 502:\n        res.data.msg = '网络错误';\n        break;\n\n      case 503:\n        res.data.msg = '服务不可用';\n        break;\n\n      case 504:\n        res.data.msg = '网络超时';\n        break;\n\n      case 505:\n        res.data.msg = 'http版本不支持该请求';\n        break;\n    }\n\n    Message.error(res.data.msg);\n    return Promise.reject(res.data);\n  } else {\n    return Promise.resolve(res.data);\n  }\n}, function (err) {\n  if (err && err.response) {\n    switch (err.response.status) {\n      case 400:\n        err.msg = '错误请求';\n        break;\n\n      case 401:\n        err.msg = '未授权，请重新登录';\n        break;\n\n      case 403:\n        err.msg = '拒绝访问';\n        break;\n\n      case 404:\n        err.msg = '请求错误,未找到该资源';\n        break;\n\n      case 405:\n        err.msg = '请求方法未允许';\n        break;\n\n      case 408:\n        err.msg = '请求超时';\n        break;\n\n      case 500:\n        err.msg = '服务器端出错';\n        break;\n\n      case 501:\n        err.msg = '网络未实现';\n        break;\n\n      case 502:\n        err.msg = '网络错误';\n        break;\n\n      case 503:\n        err.msg = '服务不可用';\n        break;\n\n      case 504:\n        err.msg = '网络超时';\n        break;\n\n      case 505:\n        err.msg = 'http版本不支持该请求';\n        break;\n\n      default:\n        err.msg = \"\\u8FDE\\u63A5\\u9519\\u8BEF\".concat(err.response.status);\n    }\n  } else {\n    err.msg = \"连接到服务器失败\";\n  }\n\n  return Promise.reject(err);\n});\n\nvar stringify = function stringify(data) {\n  return qs.stringify(data);\n};\n/*\n* get请求\n* @methods axios get\n* @params url\n* @params params\n*/\n\n\nvar fetchGet = function fetchGet(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return http.get(url, {\n    params: params\n  });\n};\n/*\n* post请求\n* @methods axios post\n* @params url\n* @params data\n*/\n\n\nvar fetchPost = function fetchPost(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return http.post(url, stringify(data));\n};\n/*\n* put请求\n* @methods axios put\n* @params url\n* @params data\n*/\n\n\nvar fetchPut = function fetchPut(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return http.put(url, stringify(data));\n};\n/*\n* delete请求\n* @methods axios delete\n* @params url\n* @params data\n*/\n\n\nvar fetchDelete = function fetchDelete(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return http.delete(url, {\n    data: stringify(data)\n  });\n};\n/*\n* 请求url\n*/\n\n\nvar URL = {\n  login: 'api/login.php',\n  //登录\n  loginout: 'api/loginout.php',\n  //退出登录\n  register: 'api/register.php',\n  //注册\n  applystore: 'api/apply_store.php',\n  //开通店铺\n  switchUserStore: 'api/switchUserStore.php',\n  //切换店铺\n  getuserStore: 'api/getuserStore.php',\n  //获取店铺状态\n  create_category: 'api/edit_category.php',\n  //新建商品分类\n  get_category: 'api/getProductcategory.php',\n  //获取商品分类\n  create_products: 'api/create_product.php',\n  //创建商品\n  get_products: 'api/getproductList.php',\n  //获取商品\n  get_products_details: 'api/getProductDetail.php',\n  //获取商品详情\n  updateProductStatus: 'api/updateProduct.php',\n  //更新商品状态\n  editProducts: 'api/editProductDetail.php' //编辑商品信息\n\n  /*\n  * 请求API\n  */\n\n};\nvar API = {\n  login: function login(params) {\n    return fetchPost(URL.login, params);\n  },\n  loginout: function loginout() {\n    return fetchGet(URL.loginout);\n  },\n  register: function register(params) {\n    return fetchPost(URL.register, params);\n  },\n  applyStore: function applyStore(params) {\n    return fetchPost(URL.applystore, params);\n  },\n  switchUserStore: function switchUserStore(params) {\n    return fetchPost(URL.switchUserStore, params);\n  },\n  getuserStore: function getuserStore() {\n    return fetchGet(URL.getuserStore);\n  },\n  create_category: function create_category(params) {\n    return fetchPost(URL.create_category, params);\n  },\n  update_category: function update_category(params) {\n    return fetchPut(URL.create_category, params);\n  },\n  delete_category: function delete_category(params) {\n    return fetchDelete(URL.create_category, params);\n  },\n  get_category: function get_category(params) {\n    return fetchGet(URL.get_category, params);\n  },\n  create_products: function create_products(params) {\n    return fetchPost(URL.create_products, params);\n  },\n  editProducts: function editProducts(params) {\n    return fetchPost(URL.editProducts, params);\n  },\n  get_products: function get_products(params) {\n    return fetchGet(URL.get_products, params);\n  },\n  get_products_details: function get_products_details(params) {\n    return fetchGet(URL.get_products_details, params);\n  },\n  updateProductStatus: function updateProductStatus(params) {\n    return fetchPut(URL.updateProductStatus, params);\n  },\n  deleteProductStatus: function deleteProductStatus(params) {\n    return fetchDelete(URL.updateProductStatus, params);\n  }\n};\nexport default API;",{"version":3,"sources":["/Users/moge/dafei/study_project/Vue/test-cli3/src/http/index.js"],"names":["axios","qs","router","Message","http","create","timeout","headers","interceptors","request","use","config","Promise","reject","error","response","res","data","status","console","log","msg","push","name","resolve","err","stringify","fetchGet","url","params","get","fetchPost","post","fetchPut","put","fetchDelete","delete","URL","login","loginout","register","applystore","switchUserStore","getuserStore","create_category","get_category","create_products","get_products","get_products_details","updateProductStatus","editProducts","API","applyStore","update_category","delete_category","deleteProductStatus"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport qs from 'qs';\nimport router from '@/router';\nimport { Message } from 'element-ui';\n// https://api.freshxiaomei.com/v1/trading/community/groupbuy/5c20d59c94303925bc0eedab/tradings\n// const Baseurl = 'https://www.easy-mock.com/mock/5c22db120639a3144b2f0dba/api'\n// const Baseurl = 'http://www.vuetext.com:8084'\n\nconst http = axios.create({\n  // baseURL: Baseurl,\n  timeout: 600,\n  headers: {\n       'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;'\n   }\n   // headers: {'X-Custom-Header': 'foobar'\n})\n\n\n//http request 拦截器\nhttp.interceptors.request.use(\n  config => {\n    config.headers = {\n      'Content-Type':'application/x-www-form-urlencoded;charset=utf-8'\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n//http request 响应拦截器即异常处理\nhttp.interceptors.response.use(res => {\n    if (res.data.status > 0) {\n      console.log(res.data);\n\n      switch (res.data.status) {\n        case 401:\n          res.data.msg = '未授权，请重新登录';\n          router.push({name:'login'})\n          break;\n        case 403:\n          res.data.msg = '拒绝访问'\n          break;\n        case 404:\n          res.data.msg = '请求错误,未找到该资源'\n          break;\n        case 405:\n          res.data.msg = '请求方法未允许'\n          break;\n        case 408:\n          res.data.msg = '请求超时'\n          break;\n        case 500:\n          res.data.msg = '服务器端出错'\n          break;\n        case 501:\n          res.data.msg = '网络未实现'\n          break;\n        case 502:\n          res.data.msg = '网络错误'\n          break;\n        case 503:\n          res.data.msg = '服务不可用'\n          break;\n        case 504:\n          res.data.msg = '网络超时'\n          break;\n        case 505:\n          res.data.msg = 'http版本不支持该请求'\n          break;\n      }\n      Message.error(res.data.msg);\n      return Promise.reject(res.data);\n    } else {\n      return Promise.resolve(res.data);\n    }\n }, err => {\n    if (err && err.response) {\n      switch (err.response.status) {\n        case 400:\n          err.msg = '错误请求'\n          break;\n        case 401:\n          err.msg = '未授权，请重新登录'\n          break;\n        case 403:\n          err.msg = '拒绝访问'\n          break;\n        case 404:\n          err.msg = '请求错误,未找到该资源'\n          break;\n        case 405:\n          err.msg = '请求方法未允许'\n          break;\n        case 408:\n          err.msg = '请求超时'\n          break;\n        case 500:\n          err.msg = '服务器端出错'\n          break;\n        case 501:\n          err.msg = '网络未实现'\n          break;\n        case 502:\n          err.msg = '网络错误'\n          break;\n        case 503:\n          err.msg = '服务不可用'\n          break;\n        case 504:\n          err.msg = '网络超时'\n          break;\n        case 505:\n          err.msg = 'http版本不支持该请求'\n          break;\n        default:\n          err.msg = `连接错误${err.response.status}`\n      }\n    } else {\n      err.msg = \"连接到服务器失败\"\n    }\n    return Promise.reject(err);\n})\n\n\nconst stringify = (data)=>{\n  return qs.stringify(data)\n}\n\n/*\n* get请求\n* @methods axios get\n* @params url\n* @params params\n*/\nconst fetchGet = (url, params={})=> {\n  return http.get(url, {params})\n}\n\n/*\n* post请求\n* @methods axios post\n* @params url\n* @params data\n*/\nconst fetchPost = (url, data={})=> {\n  return http.post(url, stringify(data))\n}\n\n/*\n* put请求\n* @methods axios put\n* @params url\n* @params data\n*/\nconst fetchPut = (url, data={})=> {\n  return http.put(url, stringify(data))\n}\n\n/*\n* delete请求\n* @methods axios delete\n* @params url\n* @params data\n*/\nconst fetchDelete = (url, data={})=> {\n  return http.delete(url, {data:stringify(data)})\n}\n\n/*\n* 请求url\n*/\nconst URL = {\n  login: 'api/login.php', //登录\n  loginout: 'api/loginout.php', //退出登录\n  register: 'api/register.php', //注册\n  applystore: 'api/apply_store.php', //开通店铺\n  switchUserStore: 'api/switchUserStore.php', //切换店铺\n  getuserStore: 'api/getuserStore.php', //获取店铺状态\n  create_category: 'api/edit_category.php', //新建商品分类\n  get_category: 'api/getProductcategory.php', //获取商品分类\n  create_products: 'api/create_product.php', //创建商品\n  get_products: 'api/getproductList.php', //获取商品\n  get_products_details: 'api/getProductDetail.php', //获取商品详情\n  updateProductStatus: 'api/updateProduct.php', //更新商品状态\n  editProducts: 'api/editProductDetail.php', //编辑商品信息\n}\n\n/*\n* 请求API\n*/\nconst API = {\n  login: (params)=>{\n    return fetchPost(URL.login, params)\n  },\n  loginout: ()=>{\n    return fetchGet(URL.loginout)\n  },\n  register:(params)=>{\n    return fetchPost(URL.register, params)\n  },\n  applyStore: (params)=> {\n    return fetchPost(URL.applystore, params)\n  },\n  switchUserStore: (params)=> {\n    return fetchPost(URL.switchUserStore, params)\n  },\n  getuserStore :()=> {\n    return fetchGet(URL.getuserStore)\n  },\n  create_category: (params)=> {\n    return fetchPost(URL.create_category, params)\n  },\n  update_category: (params)=> {\n    return fetchPut(URL.create_category, params)\n  },\n  delete_category: (params)=> {\n    return fetchDelete(URL.create_category, params)\n  },\n  get_category: (params)=> {\n    return fetchGet(URL.get_category, params)\n  },\n  create_products: (params)=> {\n    return fetchPost(URL.create_products, params)\n  },\n  editProducts: (params)=> {\n    return fetchPost(URL.editProducts, params)\n  },\n  get_products: (params)=> {\n    return fetchGet(URL.get_products, params)\n  },\n  get_products_details: (params)=> {\n    return fetchGet(URL.get_products_details, params)\n  },\n  updateProductStatus: (params)=> {\n    return fetchPut(URL.updateProductStatus, params)\n  },\n  deleteProductStatus: (params)=> {\n    return fetchDelete(URL.updateProductStatus, params)\n  }\n}\n\nexport default API\n"]}]}