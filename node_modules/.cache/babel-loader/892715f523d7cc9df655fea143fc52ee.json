{"remainingRequest":"/Users/moge/dafei/study_project/Vue/saas/node_modules/thread-loader/dist/cjs.js!/Users/moge/dafei/study_project/Vue/saas/node_modules/babel-loader/lib/index.js!/Users/moge/dafei/study_project/Vue/saas/node_modules/eslint-loader/index.js??ref--13-0!/Users/moge/dafei/study_project/Vue/saas/src/http/index.js","dependencies":[{"path":"/Users/moge/dafei/study_project/Vue/saas/src/http/index.js","mtime":1554270366085},{"path":"/Users/moge/dafei/study_project/Vue/saas/node_modules/cache-loader/dist/cjs.js","mtime":1538991184695},{"path":"/Users/moge/dafei/study_project/Vue/saas/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/moge/dafei/study_project/Vue/saas/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/moge/dafei/study_project/Vue/saas/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport axios from 'axios';\nimport qs from 'qs';\nimport router from '@/router';\nimport { Message } from 'element-ui';\nimport UTILS from '@/utils/utils'; // https://api.freshxiaomei.com/v1/trading/community/groupbuy/5c20d59c94303925bc0eedab/tradings\n// const Baseurl = 'https://www.easy-mock.com/mock/5c22db120639a3144b2f0dba/api'\n// const Baseurl = 'http://20130510/api/'\n\nvar http = axios.create({\n  // baseURL: Baseurl,\n  timeout: 600,\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;',\n    'Authentication-Token': UTILS.storage.get('Authentication-Token')\n  }\n}); //http request 拦截器\n// http.interceptors.request.use(\n//   error => {\n//     return Promise.reject(error);\n//   }\n// );\n//http request 响应拦截器即异常处理\n\nhttp.interceptors.response.use(function (res) {\n  if (res.headers && res.headers.hasOwnProperty('authentication-token')) {\n    UTILS.storage.set('Authentication-Token', res.headers['authentication-token']);\n    axios.defaults.headers.common['Authentication-Token'] = res.headers['authentication-token'];\n  }\n\n  if (res.data.status > 0) {\n    switch (res.data.status) {\n      case 401:\n        res.data.msg = '未授权，请重新登录';\n        router.push({\n          name: 'login'\n        });\n        break;\n\n      case 403:\n        res.data.msg = '拒绝访问';\n        break;\n\n      case 404:\n        res.data.msg = '请求错误,未找到该资源';\n        break;\n\n      case 405:\n        res.data.msg = '请求方法未允许';\n        break;\n\n      case 408:\n        res.data.msg = '请求超时';\n        break;\n\n      case 500:\n        res.data.msg = '服务器端出错';\n        break;\n\n      case 501:\n        res.data.msg = '网络未实现';\n        break;\n\n      case 502:\n        res.data.msg = '网络错误';\n        break;\n\n      case 503:\n        res.data.msg = '服务不可用';\n        break;\n\n      case 504:\n        res.data.msg = '网络超时';\n        break;\n\n      case 505:\n        res.data.msg = 'http版本不支持该请求';\n        break;\n    }\n\n    Message.error(res.data.msg);\n    return Promise.reject(res.data);\n  } else {\n    return Promise.resolve(res.data);\n  }\n}, function (err) {\n  if (err && err.response) {\n    switch (err.response.status) {\n      case 400:\n        err.msg = '错误请求';\n        break;\n\n      case 401:\n        err.msg = '未授权，请重新登录';\n        break;\n\n      case 403:\n        err.msg = '拒绝访问';\n        break;\n\n      case 404:\n        err.msg = '请求错误,未找到该资源';\n        break;\n\n      case 405:\n        err.msg = '请求方法未允许';\n        break;\n\n      case 408:\n        err.msg = '请求超时';\n        break;\n\n      case 500:\n        err.msg = '服务器端出错';\n        break;\n\n      case 501:\n        err.msg = '网络未实现';\n        break;\n\n      case 502:\n        err.msg = '网络错误';\n        break;\n\n      case 503:\n        err.msg = '服务不可用';\n        break;\n\n      case 504:\n        err.msg = '网络超时';\n        break;\n\n      case 505:\n        err.msg = 'http版本不支持该请求';\n        break;\n\n      default:\n        err.msg = \"\\u8FDE\\u63A5\\u9519\\u8BEF\".concat(err.response.status);\n    }\n  } else {\n    err.msg = \"连接到服务器失败\";\n  }\n\n  return Promise.reject(err);\n});\n\nvar stringify = function stringify(data) {\n  return qs.stringify(data);\n};\n/*\n* get请求\n* @methods axios get\n* @params url\n* @params params\n*/\n\n\nvar fetchGet = function fetchGet(currenturl) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _replaceUrl = replaceUrl(currenturl, data),\n      url = _replaceUrl.url,\n      params = _replaceUrl.params;\n\n  return http.get(url, {\n    params: params\n  });\n};\n/*\n* post请求\n* @methods axios post\n* @params url\n* @params data\n*/\n\n\nvar fetchPost = function fetchPost(currenturl) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _replaceUrl2 = replaceUrl(currenturl, data),\n      url = _replaceUrl2.url,\n      params = _replaceUrl2.params;\n\n  return http.post(url, stringify(params));\n};\n/*\n* put请求\n* @methods axios put\n* @params url\n* @params data\n*/\n\n\nvar fetchPut = function fetchPut(currenturl) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _replaceUrl3 = replaceUrl(currenturl, data),\n      url = _replaceUrl3.url,\n      params = _replaceUrl3.params;\n\n  return http.put(url, stringify(params));\n};\n/*\n* delete请求\n* @methods axios delete\n* @params url\n* @params data\n*/\n\n\nvar fetchDelete = function fetchDelete(currenturl) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _replaceUrl4 = replaceUrl(currenturl, data),\n      url = _replaceUrl4.url,\n      params = _replaceUrl4.params;\n\n  return http.delete(url, {\n    data: stringify(params)\n  });\n};\n/*\n* 请求url\n*/\n\n\nvar URL = {\n  login: 'api/login',\n  //登录\n  loginout: 'api/loginout',\n  //退出登录\n  register: 'api/register',\n  //注册\n  applystore: 'api/apply_store',\n  //开通店铺\n  switchUserStore: 'api/switchUserStore',\n  //切换店铺\n  getuserStore: 'api/getuserStore',\n  //获取店铺状态\n  create_category: 'api/{store_id}/create_catesgorys',\n  //新建商品分类\n  edit_category: 'api//edit_category/{catesgory_id}',\n  //编辑商品分类\n  delete_catesgory: 'api/deleteCatesgorys/{catesgory_id}',\n  //删除商品分类\n  get_category: 'api/{store_id}/getProductcategory',\n  //获取商品分类\n  create_products: 'api/create_product',\n  //创建商品\n  get_products: 'api/{store_id}/getProductList',\n  //获取商品\n  get_products_details: 'api/getProductDetail/{product_id}',\n  //获取商品详情\n  updateProductStatus: 'api/updateProduct',\n  //更新商品状态\n  editProducts: 'api/editProductDetail',\n  //编辑商品信息\n  storeSetting: 'api/store_setting' //店铺设置\n\n};\n\nvar replaceUrl = function replaceUrl(url, params) {\n  if (Object.keys(params).length) {\n    for (var i in params) {\n      var reg = new RegExp(\"{\" + i + \"}?\");\n\n      if (url.match(reg)) {\n        url = url.replace(reg, params[i]);\n        delete params[i];\n        continue;\n      }\n    }\n  }\n\n  return {\n    url: url,\n    params: params\n  };\n};\n/*\n* 请求API\n*/\n\n\nvar API = {\n  login: function login(params) {\n    return fetchPost(URL.login, params);\n  },\n  loginout: function loginout() {\n    return fetchGet(URL.loginout);\n  },\n  register: function register(params) {\n    return fetchPost(URL.register, params);\n  },\n  applyStore: function applyStore(params) {\n    return fetchPost(URL.applystore, params);\n  },\n  switchUserStore: function switchUserStore(params) {\n    return fetchPost(URL.switchUserStore, params);\n  },\n  getuserStore: function getuserStore() {\n    return fetchGet(URL.getuserStore);\n  },\n  create_category: function create_category(params) {\n    return fetchPost(URL.create_category, params);\n  },\n  update_category: function update_category(params) {\n    return fetchPut(URL.edit_category, params);\n  },\n  delete_category: function delete_category(params) {\n    return fetchPut(URL.delete_catesgory, params);\n  },\n  get_category: function get_category(params) {\n    return fetchGet(URL.get_category, params);\n  },\n  create_products: function create_products(params) {\n    return fetchPost(URL.create_products, params);\n  },\n  editProducts: function editProducts(params) {\n    return fetchPost(URL.editProducts, params);\n  },\n  get_products: function get_products(params) {\n    return fetchGet(URL.get_products, params);\n  },\n  get_products_details: function get_products_details(params) {\n    return fetchGet(URL.get_products_details, params);\n  },\n  updateProductStatus: function updateProductStatus(params) {\n    return fetchPut(URL.updateProductStatus, params);\n  },\n  deleteProductStatus: function deleteProductStatus(params) {\n    return fetchDelete(URL.updateProductStatus, params);\n  },\n  getStoreSetting: function getStoreSetting(params) {\n    return fetchGet(URL.storeSetting, params);\n  },\n  setStoreSetting: function setStoreSetting(params) {\n    return fetchPost(URL.storeSetting, params);\n  },\n  updateStoreSetting: function updateStoreSetting(params) {\n    return fetchPut(URL.storeSetting, params);\n  }\n};\nexport default API;",{"version":3,"sources":["/Users/moge/dafei/study_project/Vue/saas/src/http/index.js"],"names":["axios","qs","router","Message","UTILS","http","create","timeout","headers","storage","get","interceptors","response","use","res","hasOwnProperty","set","defaults","common","data","status","msg","push","name","error","Promise","reject","resolve","err","stringify","fetchGet","currenturl","replaceUrl","url","params","fetchPost","post","fetchPut","put","fetchDelete","delete","URL","login","loginout","register","applystore","switchUserStore","getuserStore","create_category","edit_category","delete_catesgory","get_category","create_products","get_products","get_products_details","updateProductStatus","editProducts","storeSetting","Object","keys","length","i","reg","RegExp","match","replace","API","applyStore","update_category","delete_category","deleteProductStatus","getStoreSetting","setStoreSetting","updateStoreSetting"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport qs from 'qs';\nimport router from '@/router';\nimport { Message } from 'element-ui';\nimport UTILS from '@/utils/utils'\n// https://api.freshxiaomei.com/v1/trading/community/groupbuy/5c20d59c94303925bc0eedab/tradings\n// const Baseurl = 'https://www.easy-mock.com/mock/5c22db120639a3144b2f0dba/api'\n// const Baseurl = 'http://20130510/api/'\n\nconst http = axios.create({\n  // baseURL: Baseurl,\n  timeout: 600,\n  headers: {\n       'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;',\n       'Authentication-Token':UTILS.storage.get('Authentication-Token'),\n   }\n})\n\n\n//http request 拦截器\n// http.interceptors.request.use(\n//   error => {\n//     return Promise.reject(error);\n//   }\n// );\n//http request 响应拦截器即异常处理\nhttp.interceptors.response.use(res => {\n    if (res.headers && res.headers.hasOwnProperty('authentication-token')) {\n      UTILS.storage.set('Authentication-Token',res.headers['authentication-token']);\n      axios.defaults.headers.common['Authentication-Token'] = res.headers['authentication-token'];\n    }\n    if (res.data.status > 0) {\n      switch (res.data.status) {\n        case 401:\n          res.data.msg = '未授权，请重新登录';\n          router.push({name:'login'})\n          break;\n        case 403:\n          res.data.msg = '拒绝访问'\n          break;\n        case 404:\n          res.data.msg = '请求错误,未找到该资源'\n          break;\n        case 405:\n          res.data.msg = '请求方法未允许'\n          break;\n        case 408:\n          res.data.msg = '请求超时'\n          break;\n        case 500:\n          res.data.msg = '服务器端出错'\n          break;\n        case 501:\n          res.data.msg = '网络未实现'\n          break;\n        case 502:\n          res.data.msg = '网络错误'\n          break;\n        case 503:\n          res.data.msg = '服务不可用'\n          break;\n        case 504:\n          res.data.msg = '网络超时'\n          break;\n        case 505:\n          res.data.msg = 'http版本不支持该请求'\n          break;\n      }\n      Message.error(res.data.msg);\n      return Promise.reject(res.data);\n    } else {\n      return Promise.resolve(res.data);\n    }\n }, err => {\n    if (err && err.response) {\n      switch (err.response.status) {\n        case 400:\n          err.msg = '错误请求'\n          break;\n        case 401:\n          err.msg = '未授权，请重新登录'\n          break;\n        case 403:\n          err.msg = '拒绝访问'\n          break;\n        case 404:\n          err.msg = '请求错误,未找到该资源'\n          break;\n        case 405:\n          err.msg = '请求方法未允许'\n          break;\n        case 408:\n          err.msg = '请求超时'\n          break;\n        case 500:\n          err.msg = '服务器端出错'\n          break;\n        case 501:\n          err.msg = '网络未实现'\n          break;\n        case 502:\n          err.msg = '网络错误'\n          break;\n        case 503:\n          err.msg = '服务不可用'\n          break;\n        case 504:\n          err.msg = '网络超时'\n          break;\n        case 505:\n          err.msg = 'http版本不支持该请求'\n          break;\n        default:\n          err.msg = `连接错误${err.response.status}`\n      }\n    } else {\n      err.msg = \"连接到服务器失败\"\n    }\n    return Promise.reject(err);\n})\n\n\nconst stringify = (data)=>{\n  return qs.stringify(data)\n}\n\n/*\n* get请求\n* @methods axios get\n* @params url\n* @params params\n*/\nconst fetchGet = (currenturl, data={})=> {\n  let { url,params} = replaceUrl(currenturl,data);\n  return http.get(url, {params})\n}\n\n/*\n* post请求\n* @methods axios post\n* @params url\n* @params data\n*/\nconst fetchPost = (currenturl, data={})=> {\n  let { url,params} = replaceUrl(currenturl,data);\n  return http.post(url, stringify(params))\n}\n\n/*\n* put请求\n* @methods axios put\n* @params url\n* @params data\n*/\nconst fetchPut = (currenturl, data={})=> {\n  let { url,params} = replaceUrl(currenturl,data);\n  return http.put(url, stringify(params))\n}\n\n/*\n* delete请求\n* @methods axios delete\n* @params url\n* @params data\n*/\nconst fetchDelete = (currenturl, data={})=> {\n  let { url,params} = replaceUrl(currenturl,data);\n  return http.delete(url, {data:stringify(params)})\n}\n\n/*\n* 请求url\n*/\nconst URL = {\n  login: 'api/login', //登录\n  loginout: 'api/loginout', //退出登录\n  register: 'api/register', //注册\n  applystore: 'api/apply_store', //开通店铺\n  switchUserStore: 'api/switchUserStore', //切换店铺\n  getuserStore: 'api/getuserStore', //获取店铺状态\n  create_category: 'api/{store_id}/create_catesgorys', //新建商品分类\n  edit_category: 'api//edit_category/{catesgory_id}', //编辑商品分类\n  delete_catesgory: 'api/deleteCatesgorys/{catesgory_id}', //删除商品分类\n  get_category: 'api/{store_id}/getProductcategory', //获取商品分类\n  create_products: 'api/create_product', //创建商品\n  get_products: 'api/{store_id}/getProductList', //获取商品\n  get_products_details: 'api/getProductDetail/{product_id}', //获取商品详情\n  updateProductStatus: 'api/updateProduct', //更新商品状态\n  editProducts: 'api/editProductDetail', //编辑商品信息\n  storeSetting: 'api/store_setting', //店铺设置\n}\n\n\nconst replaceUrl = (url,params)=>{\n    if (Object.keys(params).length) {\n        for (let i in params) {\n            let reg =  new RegExp(\"{\" + i + \"}?\");\n            if (url.match(reg)) {\n               url = url.replace(reg, params[i])\n               delete params[i];\n               continue;\n            }\n        }\n    }\n    return { url,params};\n}\n\n/*\n* 请求API\n*/\nconst API = {\n  login: (params)=>{\n    return fetchPost(URL.login, params)\n  },\n  loginout: ()=>{\n    return fetchGet(URL.loginout)\n  },\n  register:(params)=>{\n    return fetchPost(URL.register, params)\n  },\n  applyStore: (params)=> {\n    return fetchPost(URL.applystore, params)\n  },\n  switchUserStore: (params)=> {\n    return fetchPost(URL.switchUserStore, params)\n  },\n  getuserStore :()=> {\n    return fetchGet(URL.getuserStore)\n  },\n  create_category:(params)=> {\n    return fetchPost(URL.create_category, params)\n  },\n  update_category: (params)=> {\n    return fetchPut(URL.edit_category, params)\n  },\n  delete_category: (params)=> {\n    return fetchPut(URL.delete_catesgory, params)\n  },\n  get_category: (params)=> {\n    return fetchGet(URL.get_category, params)\n  },\n  create_products: (params)=> {\n    return fetchPost(URL.create_products, params)\n  },\n  editProducts: (params)=> {\n    return fetchPost(URL.editProducts, params)\n  },\n  get_products: (params)=> {\n    return fetchGet(URL.get_products, params)\n  },\n  get_products_details: (params)=> {\n    return fetchGet(URL.get_products_details, params)\n  },\n  updateProductStatus: (params)=> {\n    return fetchPut(URL.updateProductStatus, params)\n  },\n  deleteProductStatus: (params)=> {\n    return fetchDelete(URL.updateProductStatus, params)\n  },\n  getStoreSetting: (params)=> {\n    return fetchGet(URL.storeSetting, params)\n  },\n  setStoreSetting: (params)=> {\n    return fetchPost(URL.storeSetting, params)\n  },\n  updateStoreSetting: (params)=>{\n    return fetchPut(URL.storeSetting, params)\n  }\n}\n\nexport default API\n"]}]}