{"remainingRequest":"/Users/moge/dafei/study_project/Vue/saas/node_modules/thread-loader/dist/cjs.js!/Users/moge/dafei/study_project/Vue/saas/node_modules/babel-loader/lib/index.js!/Users/moge/dafei/study_project/Vue/saas/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/moge/dafei/study_project/Vue/saas/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/moge/dafei/study_project/Vue/saas/src/components/upLoad.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/moge/dafei/study_project/Vue/saas/src/components/upLoad.vue","mtime":1552642390628},{"path":"/Users/moge/dafei/study_project/Vue/saas/node_modules/cache-loader/dist/cjs.js","mtime":1538991184695},{"path":"/Users/moge/dafei/study_project/Vue/saas/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/moge/dafei/study_project/Vue/saas/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/moge/dafei/study_project/Vue/saas/node_modules/cache-loader/dist/cjs.js","mtime":1538991184695},{"path":"/Users/moge/dafei/study_project/Vue/saas/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.typed.uint8-array\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport config from '@/config/config';\nexport default {\n  name: 'upLoad',\n  data: function data() {\n    return {\n      imageUrl: [],\n      imgQuality: 0.5 //压缩图片的质量\n\n    };\n  },\n  props: {\n    img: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    showImg: function showImg() {\n      return this.img ? config.Imghost + this.img : '';\n    }\n  },\n  methods: {\n    dataURItoBlob: function dataURItoBlob(dataURI, type) {\n      var binary = atob(dataURI.split(',')[1]);\n      var array = [];\n\n      for (var i = 0; i < binary.length; i++) {\n        array.push(binary.charCodeAt(i));\n      }\n\n      return new Blob([new Uint8Array(array)], {\n        type: type\n      });\n    },\n    handleAvatarSuccess: function handleAvatarSuccess(res, file) {\n      this.imageUrl.push(URL.createObjectURL(file.raw));\n      this.$emit('success', res);\n    },\n    beforeAvatarUpload: function beforeAvatarUpload(param) {\n      var imgSize = param.size / 1024 / 1024; //对图片进行压缩\n\n      if (imgSize > 0.2) {\n        var _this = this;\n\n        return new Promise(function (resolve) {\n          var reader = new FileReader();\n          var image = new Image();\n\n          image.onload = function () {\n            var canvas = document.createElement('canvas');\n            var context = canvas.getContext('2d');\n            var width = image.width * _this.imgQuality;\n            var height = image.height * _this.imgQuality;\n            canvas.width = width;\n            canvas.height = height;\n            context.clearRect(0, 0, width, height);\n            context.drawImage(image, 0, 0, width, height);\n            var dataUrl = canvas.toDataURL(param.type);\n\n            var blobData = _this.dataURItoBlob(dataUrl, param.type);\n\n            resolve(blobData);\n          };\n\n          reader.onload = function (e) {\n            image.src = e.target.result;\n          };\n\n          reader.readAsDataURL(param);\n        });\n      }\n    },\n    handleExceed: function handleExceed(files, fileList) {\n      console.log(fileList, 'fileList');\n      this.$message.warning(\"\\u6700\\u591A\\u9009\\u62E91\\u5F20\");\n    },\n    deleteImg: function deleteImg(idx) {\n      this.$refs.upload.clearFiles();\n      this.imageUrl.splice(idx, 1);\n    }\n  }\n};",{"version":3,"sources":["upLoad.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,OAAA,MAAA,MAAA,iBAAA;AACA,eAAA;AACA,QAAA,QADA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA,gBAAA,EADA;AAEA,kBAAA,GAFA,CAEA;;AAFA,KAAA;AAIA,GAPA;AAQA,SAAA;AACA,SAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA;AADA,GARA;AAcA,YAAA;AACA,WADA,qBACA;AACA,aAAA,KAAA,GAAA,GAAA,OAAA,OAAA,GAAA,KAAA,GAAA,GAAA,EAAA;AACA;AAHA,GAdA;AAmBA,WAAA;AACA,iBADA,yBACA,OADA,EACA,IADA,EACA;AACA,UAAA,SAAA,KAAA,QAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AACA,UAAA,QAAA,EAAA;;AACA,WAAA,IAAA,IAAA,CAAA,EAAA,IAAA,OAAA,MAAA,EAAA,GAAA,EAAA;AACA,cAAA,IAAA,CAAA,OAAA,UAAA,CAAA,CAAA,CAAA;AACA;;AACA,aAAA,IAAA,IAAA,CAAA,CAAA,IAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA;AAAA,cAAA;AAAA,OAAA,CAAA;AACA,KARA;AASA,uBATA,+BASA,GATA,EASA,IATA,EASA;AACA,WAAA,QAAA,CAAA,IAAA,CAAA,IAAA,eAAA,CAAA,KAAA,GAAA,CAAA;AACA,WAAA,KAAA,CAAA,SAAA,EAAA,GAAA;AACA,KAZA;AAaA,sBAbA,8BAaA,KAbA,EAaA;AACA,UAAA,UAAA,MAAA,IAAA,GAAA,IAAA,GAAA,IAAA,CADA,CAEA;;AACA,UAAA,UAAA,GAAA,EAAA;AACA,YAAA,QAAA,IAAA;;AACA,eAAA,IAAA,OAAA,CAAA,mBAAA;AACA,cAAA,SAAA,IAAA,UAAA,EAAA;AACA,cAAA,QAAA,IAAA,KAAA,EAAA;;AACA,gBAAA,MAAA,GAAA,YAAA;AACA,gBAAA,SAAA,SAAA,aAAA,CAAA,QAAA,CAAA;AACA,gBAAA,UAAA,OAAA,UAAA,CAAA,IAAA,CAAA;AACA,gBAAA,QAAA,MAAA,KAAA,GAAA,MAAA,UAAA;AACA,gBAAA,SAAA,MAAA,MAAA,GAAA,MAAA,UAAA;AACA,mBAAA,KAAA,GAAA,KAAA;AACA,mBAAA,MAAA,GAAA,MAAA;AACA,oBAAA,SAAA,CAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,MAAA;AACA,oBAAA,SAAA,CAAA,KAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,MAAA;AACA,gBAAA,UAAA,OAAA,SAAA,CAAA,MAAA,IAAA,CAAA;;AACA,gBAAA,WAAA,MAAA,aAAA,CAAA,OAAA,EAAA,MAAA,IAAA,CAAA;;AACA,oBAAA,QAAA;AACA,WAZA;;AAaA,iBAAA,MAAA,GAAA,aAAA;AAAA,kBAAA,GAAA,GAAA,EAAA,MAAA,CAAA,MAAA;AAAA,WAAA;;AACA,iBAAA,aAAA,CAAA,KAAA;AACA,SAlBA,CAAA;AAmBA;AACA,KAtCA;AAuCA,gBAvCA,wBAuCA,KAvCA,EAuCA,QAvCA,EAuCA;AACA,cAAA,GAAA,CAAA,QAAA,EAAA,UAAA;AACA,WAAA,QAAA,CAAA,OAAA;AACA,KA1CA;AA2CA,aA3CA,qBA2CA,GA3CA,EA2CA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,UAAA;AACA,WAAA,QAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA;AACA;AA9CA;AAnBA,CAAA","sourcesContent":["<template>\n  <div class=\"upLoad\">\n    <div class=\"sys-flex upload-main\">\n      <div class=\"image-main sys-flex\" v-if=\"showImg && !imageUrl.length\">\n          <div class=\"picture rel\">\n              <img :src=\"showImg\">\n          </div>\n      </div>\n      <div class=\"image-main sys-flex\" v-if=\"imageUrl.length\">\n          <div class=\"picture rel\"  v-for=\"(item,index) in imageUrl\"   :key=\"index\">\n              <div class=\"mask abs sys-flex\" @click=\"deleteImg(index)\">\n                  <i class=\"el-icon-plus el-icon-delete\"></i>\n              </div>\n              <img :src=\"item\">\n          </div>\n      </div>\n      <el-upload\n        ref=\"upload\"\n        class=\"avatar-uploader sys-flex\"\n        :on-exceed=\"handleExceed\"\n        :limit=\"1\"\n         action=\"https://20130510.cn/api/upLoad.php\"\n        :show-file-list=\"false\"\n        :on-success=\"handleAvatarSuccess\"\n        :before-upload=\"beforeAvatarUpload\">\n        <i class=\"el-icon-plus avatar-uploader-icon\"></i>\n      </el-upload>\n    </div>\n  </div>\n</template>\n<script>\nimport config from '@/config/config'\nexport default {\n  name: 'upLoad',\n  data() {\n      return {\n        imageUrl: [],\n        imgQuality: 0.5 //压缩图片的质量\n      };\n  },\n  props:{\n    img:{\n      type:String,\n      default:''\n    }\n  },\n  computed:{\n    showImg () {\n      return this.img ? config.Imghost + this.img : ''\n    }\n  },\n  methods: {\n    dataURItoBlob(dataURI, type) {\n     let binary = atob(dataURI.split(',')[1]);\n     let array = [];\n     for(var i = 0; i < binary.length; i++) {\n      array.push(binary.charCodeAt(i));\n     }\n     return new Blob([new Uint8Array(array)], {type: type});\n    },\n    handleAvatarSuccess(res, file) {\n      this.imageUrl.push(URL.createObjectURL(file.raw));\n      this.$emit('success',res);\n    },\n    beforeAvatarUpload(param) {\n      const imgSize = param.size / 1024 / 1024;\n      //对图片进行压缩\n       if(imgSize > 0.2) {\n        const _this = this;\n        return new Promise(resolve => {\n          const reader = new FileReader();\n          const image = new Image();\n          image.onload = () => {\n            const canvas = document.createElement('canvas');\n            const context = canvas.getContext('2d');\n            const width = image.width * _this.imgQuality\n            const height = image.height * _this.imgQuality\n            canvas.width = width;\n            canvas.height = height;\n            context.clearRect(0, 0, width, height);\n            context.drawImage(image, 0, 0, width, height);\n            const dataUrl = canvas.toDataURL(param.type);\n            const blobData = _this.dataURItoBlob(dataUrl, param.type);\n            resolve(blobData)\n          }\n         reader.onload = (e => { image.src = e.target.result; });\n         reader.readAsDataURL(param);\n        })\n      }\n    },\n    handleExceed (files, fileList) {\n      console.log(fileList,'fileList')\n      this.$message.warning(`最多选择1张`);\n    },\n    deleteImg (idx) {\n      this.$refs.upload.clearFiles();\n      this.imageUrl.splice(idx,1);\n    }\n  }\n}\n</script>\n<style lang=\"scss\">\n  .avatar-uploader{\n    .el-upload {\n      border: 1px dashed #d9d9d9;\n      border-radius: 6px;\n      cursor: pointer;\n      position: relative;\n      overflow: hidden;\n      &:hover {\n        border-color: #409EFF;\n      }\n    }\n  }\n  .avatar-uploader-icon {\n    font-size: 28px;\n    color: #8c939d;\n    width: 58px;\n    height: 58px;\n    line-height: 58px;\n    text-align: center;\n  }\n  .avatar {\n    width: 58px;\n    height: 58px;\n    display: block;\n  }\n  .upload-main{\n    align-items: center;\n    .image-main{\n      flex-wrap: wrap;\n      align-items: center;\n      .picture{\n        width: 58px;\n        height: 58px;\n        margin:0 10px 0 0;\n        border:1px solid #efefef;\n        &>img{\n          width: 58px;\n          height: 58px;\n        }\n        .mask{\n          width: 58px;\n          height: 58px;\n          justify-content: center;\n          align-items: center;\n          opacity: 0;\n          left: 0;\n          top:0;\n          cursor: pointer;\n          transition: 0.5;\n          background-color: rgba(0,0,0,0);\n          color: #FFF;\n          &:hover {\n              opacity: 1;\n              background-color: rgba(0,0,0,0.6);\n          }\n        }\n      }\n    }\n  }\n</style>\n"],"sourceRoot":"src/components"}]}