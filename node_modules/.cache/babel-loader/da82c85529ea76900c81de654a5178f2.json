{"remainingRequest":"/Users/moge/dafei/study_project/Vue/saas/node_modules/babel-loader/lib/index.js!/Users/moge/dafei/study_project/Vue/saas/node_modules/eslint-loader/index.js??ref--13-0!/Users/moge/dafei/study_project/Vue/saas/src/store/modules/products/index.js","dependencies":[{"path":"/Users/moge/dafei/study_project/Vue/saas/src/store/modules/products/index.js","mtime":1550115144432},{"path":"/Users/moge/dafei/study_project/Vue/saas/node_modules/cache-loader/dist/cjs.js","mtime":1538991184695},{"path":"/Users/moge/dafei/study_project/Vue/saas/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/moge/dafei/study_project/Vue/saas/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/moge/dafei/study_project/Vue/saas/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\n\nvar _mutations;\n\nimport { GETGOODSLIST, GETGOODSDETAILS } from '@/store/mutations-type';\nimport API from '@/http';\nvar goodsList = {\n  state: {\n    goodList: [],\n    goodDetails: {}\n  },\n  actions: {\n    /*获取商品*信息*/\n    LOAD_GOODSLIST: function LOAD_GOODSLIST(_ref, data) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve, reject) {\n        console.log(commit);\n        API.get_products(data).then(function (res) {\n          if (res.status == 0) {\n            commit(GETGOODSLIST, res.data.products);\n            resolve();\n          } else {\n            console.log(res, 'res---------');\n            reject(res);\n          }\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    },\n\n    /*生成新的商品*/\n    CREATE_GOODS: function CREATE_GOODS(_ref2, data) {\n      var commit = _ref2.commit;\n      console.log(commit);\n      return new Promise(function (resolve, reject) {\n        API.create_products(data).then(function (res) {\n          if (res.status == 0) {\n            resolve();\n          } else {\n            reject(res);\n          }\n        });\n      });\n    },\n\n    /*编辑商品*/\n    EDIT_GOODS: function EDIT_GOODS(_ref3, data) {\n      var commit = _ref3.commit;\n      console.log(commit);\n      return new Promise(function (resolve, reject) {\n        API.editProducts(data).then(function (res) {\n          if (res.status == 0) {\n            resolve();\n          } else {\n            reject(res);\n          }\n        });\n      });\n    },\n\n    /*更新商品信息*/\n    UPDATE_GOODSITEM: function UPDATE_GOODSITEM(_ref4, data) {\n      var commit = _ref4.commit;\n      console.log(commit);\n      return new Promise(function (resolve, reject) {\n        API.updateProductStatus(data).then(function (res) {\n          if (res.status == 0) {\n            resolve();\n          } else {\n            reject(res);\n          }\n        });\n      });\n    },\n\n    /*删除商品*/\n    DELETE_GOODSITEM: function DELETE_GOODSITEM(_ref5, catesgory_id) {\n      var commit = _ref5.commit;\n      console.log(commit);\n      return new Promise(function (resolve, reject) {\n        API.deleteProductStatus(catesgory_id).then(function (res) {\n          if (res.status == 0) {\n            resolve();\n          } else {\n            reject();\n          }\n        });\n      });\n    },\n\n    /*获取商品详情*/\n    GET_PRODUCT_DETAILS: function GET_PRODUCT_DETAILS(_ref6, data) {\n      var commit = _ref6.commit;\n      console.log(commit);\n      return new Promise(function (resolve, reject) {\n        API.get_products_details(data).then(function (res) {\n          if (res.status == 0) {\n            resolve(res.data);\n            commit(GETGOODSDETAILS, res.data);\n          } else {\n            reject();\n          }\n        });\n      });\n    }\n  },\n  mutations: (_mutations = {}, _defineProperty(_mutations, GETGOODSLIST, function (state, data) {\n    state.goodList = data;\n  }), _defineProperty(_mutations, GETGOODSDETAILS, function (state, data) {\n    state.goodDetails = data;\n  }), _mutations),\n  namespaced: true\n};\nexport default goodsList;",{"version":3,"sources":["/Users/moge/dafei/study_project/Vue/saas/src/store/modules/products/index.js"],"names":["GETGOODSLIST","GETGOODSDETAILS","API","goodsList","state","goodList","goodDetails","actions","LOAD_GOODSLIST","data","commit","Promise","resolve","reject","console","log","get_products","then","res","status","products","catch","err","CREATE_GOODS","create_products","EDIT_GOODS","editProducts","UPDATE_GOODSITEM","updateProductStatus","DELETE_GOODSITEM","catesgory_id","deleteProductStatus","GET_PRODUCT_DETAILS","get_products_details","mutations","namespaced"],"mappings":";;;;AAAA,SAASA,YAAT,EAAuBC,eAAvB,QAA6C,wBAA7C;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,IAAMC,YAAY;AAChBC,SAAO;AACLC,cAAS,EADJ;AAELC,iBAAY;AAFP,GADS;AAKhBC,WAAS;AACP;AACAC,kBAFO,gCAEqBC,IAFrB,EAE2B;AAAA,UAAhBC,MAAgB,QAAhBA,MAAgB;AAChC,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACnCC,gBAAQC,GAAR,CAAYL,MAAZ;AACAR,YAAIc,YAAJ,CAAiBP,IAAjB,EAAuBQ,IAAvB,CAA4B,eAAK;AAC/B,cAAIC,IAAIC,MAAJ,IAAc,CAAlB,EAAqB;AACnBT,mBAAOV,YAAP,EAAoBkB,IAAIT,IAAJ,CAASW,QAA7B;AACAR;AACD,WAHD,MAGO;AACLE,oBAAQC,GAAR,CAAYG,GAAZ,EAAgB,cAAhB;AACAL,mBAAOK,GAAP;AACD;AACF,SARD,EAQGG,KARH,CAQS,eAAK;AACVR,iBAAOS,GAAP;AACH,SAVD;AAWD,OAbM,CAAP;AAcD,KAjBM;;AAkBP;AACAC,gBAnBO,+BAmBmBd,IAnBnB,EAmByB;AAAA,UAAhBC,MAAgB,SAAhBA,MAAgB;AAC9BI,cAAQC,GAAR,CAAYL,MAAZ;AACA,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACnCX,YAAIsB,eAAJ,CAAoBf,IAApB,EAA0BQ,IAA1B,CAA+B,eAAK;AAClC,cAAIC,IAAIC,MAAJ,IAAc,CAAlB,EAAqB;AACnBP;AACD,WAFD,MAEO;AACLC,mBAAOK,GAAP;AACD;AACF,SAND;AAOD,OARM,CAAP;AASD,KA9BM;;AA+BP;AACAO,cAhCO,6BAgCiBhB,IAhCjB,EAgCuB;AAAA,UAAhBC,MAAgB,SAAhBA,MAAgB;AAC5BI,cAAQC,GAAR,CAAYL,MAAZ;AACA,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACnCX,YAAIwB,YAAJ,CAAiBjB,IAAjB,EAAuBQ,IAAvB,CAA4B,eAAK;AAC/B,cAAIC,IAAIC,MAAJ,IAAc,CAAlB,EAAqB;AACnBP;AACD,WAFD,MAEO;AACLC,mBAAOK,GAAP;AACD;AACF,SAND;AAOD,OARM,CAAP;AASD,KA3CM;;AA4CP;AACAS,oBA7CO,mCA6CuBlB,IA7CvB,EA6C6B;AAAA,UAAhBC,MAAgB,SAAhBA,MAAgB;AAClCI,cAAQC,GAAR,CAAYL,MAAZ;AACA,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACnCX,YAAI0B,mBAAJ,CAAwBnB,IAAxB,EAA8BQ,IAA9B,CAAmC,eAAK;AACtC,cAAIC,IAAIC,MAAJ,IAAc,CAAlB,EAAqB;AACnBP;AACD,WAFD,MAEO;AACLC,mBAAOK,GAAP;AACD;AACF,SAND;AAOD,OARM,CAAP;AASD,KAxDM;;AAyDP;AACAW,oBA1DO,mCA0DuBC,YA1DvB,EA0DqC;AAAA,UAAxBpB,MAAwB,SAAxBA,MAAwB;AAC1CI,cAAQC,GAAR,CAAYL,MAAZ;AACA,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACnCX,YAAI6B,mBAAJ,CAAwBD,YAAxB,EAAsCb,IAAtC,CAA2C,eAAK;AAC9C,cAAIC,IAAIC,MAAJ,IAAc,CAAlB,EAAqB;AACnBP;AACD,WAFD,MAEO;AACLC;AACD;AACF,SAND;AAOD,OARM,CAAP;AASD,KArEM;;AAsEP;AACAmB,uBAvEO,sCAuEuBvB,IAvEvB,EAuE6B;AAAA,UAAdC,MAAc,SAAdA,MAAc;AAClCI,cAAQC,GAAR,CAAYL,MAAZ;AACA,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACnCX,YAAI+B,oBAAJ,CAAyBxB,IAAzB,EAA+BQ,IAA/B,CAAoC,eAAK;AACvC,cAAIC,IAAIC,MAAJ,IAAc,CAAlB,EAAqB;AACnBP,oBAAQM,IAAIT,IAAZ;AACAC,mBAAOT,eAAP,EAAuBiB,IAAIT,IAA3B;AACD,WAHD,MAGO;AACLI;AACD;AACF,SAPD;AAQD,OATM,CAAP;AAUD;AAnFM,GALO;AA0FhBqB,2DACGlC,YADH,YACkBI,KADlB,EACyBK,IADzB,EAC+B;AAC3BL,UAAMC,QAAN,GAAiBI,IAAjB;AACD,GAHH,+BAIGR,eAJH,YAIqBG,KAJrB,EAI4BK,IAJ5B,EAIkC;AAC9BL,UAAME,WAAN,GAAoBG,IAApB;AACD,GANH,cA1FgB;AAkGhB0B,cAAY;AAlGI,CAAlB;AAqGA,eAAehC,SAAf","sourcesContent":["import { GETGOODSLIST, GETGOODSDETAILS} from '@/store/mutations-type'\nimport API from '@/http';\n\nconst goodsList = {\n  state: {\n    goodList:[],\n    goodDetails:{}\n  },\n  actions: {\n    /*获取商品*信息*/\n    LOAD_GOODSLIST ({ commit }, data) {\n      return new Promise((resolve,reject)=>{\n        console.log(commit);\n        API.get_products(data).then(res=>{\n          if (res.status == 0) {\n            commit(GETGOODSLIST,res.data.products);\n            resolve();\n          } else {\n            console.log(res,'res---------')\n            reject(res);\n          }\n        }).catch(err=>{\n            reject(err);\n        })\n      })\n    },\n    /*生成新的商品*/\n    CREATE_GOODS ({ commit }, data) {\n      console.log(commit);\n      return new Promise((resolve,reject)=>{\n        API.create_products(data).then(res=>{\n          if (res.status == 0) {\n            resolve();\n          } else {\n            reject(res);\n          }\n        })\n      })\n    },\n    /*编辑商品*/\n    EDIT_GOODS ({ commit }, data) {\n      console.log(commit);\n      return new Promise((resolve,reject)=>{\n        API.editProducts(data).then(res=>{\n          if (res.status == 0) {\n            resolve();\n          } else {\n            reject(res);\n          }\n        })\n      })\n    },\n    /*更新商品信息*/\n    UPDATE_GOODSITEM ({ commit }, data) {\n      console.log(commit);\n      return new Promise((resolve,reject)=>{\n        API.updateProductStatus(data).then(res=>{\n          if (res.status == 0) {\n            resolve();\n          } else {\n            reject(res);\n          }\n        })\n      })\n    },\n    /*删除商品*/\n    DELETE_GOODSITEM ({ commit }, catesgory_id) {\n      console.log(commit);\n      return new Promise((resolve,reject)=>{\n        API.deleteProductStatus(catesgory_id).then(res=>{\n          if (res.status == 0) {\n            resolve();\n          } else {\n            reject();\n          }\n        })\n      })\n    },\n    /*获取商品详情*/\n    GET_PRODUCT_DETAILS ({commit},data) {\n      console.log(commit);\n      return new Promise((resolve,reject)=>{\n        API.get_products_details(data).then(res=>{\n          if (res.status == 0) {\n            resolve(res.data);\n            commit(GETGOODSDETAILS,res.data);\n          } else {\n            reject();\n          }\n        })\n      })\n    }\n  },\n  mutations: {\n    [GETGOODSLIST] (state, data) {\n      state.goodList = data;\n    },\n    [GETGOODSDETAILS] (state, data) {\n      state.goodDetails = data;\n    }\n  },\n  namespaced: true\n}\n\nexport default goodsList\n"]}]}